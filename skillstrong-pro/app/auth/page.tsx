'use client';import { useState } from 'react';import { supabase } from '@/lib/supabase';
export default function AuthPage(){const [mode,setMode]=useState<'signin'|'signup'|'forgot'>('signup');return(<main className='section'><div className='card auth-card'><h2 className='h2'>{mode==='signup'?'Create your account':mode==='signin'?'Sign in':'Reset password'}</h2>{mode==='signup'&&<SignUp onSwitch={()=>setMode('signin')}/>} {mode==='signin'&&<SignIn onSwitch={()=>setMode('signup')} onForgot={()=>setMode('forgot')}/>} {mode==='forgot'&&<Forgot onBack={()=>setMode('signin')}/>}</div></main>);}
function SignUp({onSwitch}:{onSwitch:()=>void}){const [email,setEmail]=useState('');const [password,setPassword]=useState('');const [confirm,setConfirm]=useState('');const [msg,setMsg]=useState<string|null>(null);
async function submit(){setMsg(null);if(password!==confirm)return setMsg('Passwords do not match.');const {error}=await supabase.auth.signUp({email,password,options:{emailRedirectTo:window.location.origin}});setMsg(error?error.message:'Check your email to confirm your account.');}
return(<div style={{display:'grid',gap:10}}><input className='input' placeholder='Email' value={email} onChange={e=>setEmail(e.target.value)}/><input className='input' type='password' placeholder='Create a password' value={password} onChange={e=>setPassword(e.target.value)}/><input className='input' type='password' placeholder='Confirm password' value={confirm} onChange={e=>setConfirm(e.target.value)}/><button className='btn' onClick={submit}>Create account</button>{msg&&<div className='small'>{msg}</div>}<div className='small'>Already have an account? <span className='link' onClick={onSwitch}>Sign in</span></div></div>);}
function SignIn({onSwitch,onForgot}:{onSwitch:()=>void;onForgot:()=>void}){const [email,setEmail]=useState('');const [password,setPassword]=useState('');const [msg,setMsg]=useState<string|null>(null);
async function submit(){setMsg(null);const {error}=await supabase.auth.signInWithPassword({email,password});setMsg(error?error.message:'Signed in.');if(!error)window.location.href='/chat';}
return(<div style={{display:'grid',gap:10}}><input className='input' placeholder='Email' value={email} onChange={e=>setEmail(e.target.value)}/><input className='input' type='password' placeholder='Password' value={password} onChange={e=>setPassword(e.target.value)}/><button className='btn' onClick={submit}>Sign in</button>{msg&&<div className='small'>{msg}</div>}<div className='flex' style={{justifyContent:'space-between'}}><span className='link' onClick={onForgot}>Forgot password?</span><span className='link' onClick={onSwitch}>Create account</span></div></div>);}
function Forgot({onBack}:{onBack:()=>void}){const [email,setEmail]=useState('');const [msg,setMsg]=useState<string|null>(null);
async function send(){const {error}=await supabase.auth.resetPasswordForEmail(email,{redirectTo:window.location.origin+'/reset'});setMsg(error?error.message:'Check your email for a reset link.');}
return(<div style={{display:'grid',gap:10}}><input className='input' placeholder='Email' value={email} onChange={e=>setEmail(e.target.value)}/><button className='btn' onClick={send}>Send reset link</button>{msg&&<div className='small'>{msg}</div>}<span className='link' onClick={onBack}>Back to sign in</span></div>);}